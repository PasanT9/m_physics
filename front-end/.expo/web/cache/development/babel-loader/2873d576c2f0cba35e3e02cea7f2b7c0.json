{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Projects\\\\m_physics\\\\front-end\\\\node_modules\\\\expo-ui-kit\\\\src\\\\Text.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport expoTheme from \"./theme\";\nimport { mergeTheme, getMargins, getPaddings } from \"./utils/index\";\n\nvar Typography = function Typography(props) {\n  var h1 = props.h1,\n      h2 = props.h2,\n      h3 = props.h3,\n      title = props.title,\n      subtitle = props.subtitle,\n      caption = props.caption,\n      small = props.small,\n      size = props.size,\n      transform = props.transform,\n      regular = props.regular,\n      bold = props.bold,\n      semibold = props.semibold,\n      medium = props.medium,\n      weight = props.weight,\n      light = props.light,\n      center = props.center,\n      right = props.right,\n      spacing = props.spacing,\n      height = props.height,\n      color = props.color,\n      primary = props.primary,\n      secondary = props.secondary,\n      tertiary = props.tertiary,\n      black = props.black,\n      white = props.white,\n      gray = props.gray,\n      error = props.error,\n      warning = props.warning,\n      success = props.success,\n      info = props.info,\n      animated = props.animated,\n      theme = props.theme,\n      style = props.style,\n      children = props.children,\n      margin = props.margin,\n      marginHorizontal = props.marginHorizontal,\n      marginVertical = props.marginVertical,\n      marginTop = props.marginTop,\n      marginBottom = props.marginBottom,\n      marginLeft = props.marginLeft,\n      marginRight = props.marginRight,\n      padding = props.padding,\n      paddingHorizontal = props.paddingHorizontal,\n      paddingVertical = props.paddingVertical,\n      paddingTop = props.paddingTop,\n      paddingBottom = props.paddingBottom,\n      paddingLeft = props.paddingLeft,\n      paddingRight = props.paddingRight,\n      rest = _objectWithoutProperties(props, [\"h1\", \"h2\", \"h3\", \"title\", \"subtitle\", \"caption\", \"small\", \"size\", \"transform\", \"regular\", \"bold\", \"semibold\", \"medium\", \"weight\", \"light\", \"center\", \"right\", \"spacing\", \"height\", \"color\", \"primary\", \"secondary\", \"tertiary\", \"black\", \"white\", \"gray\", \"error\", \"warning\", \"success\", \"info\", \"animated\", \"theme\", \"style\", \"children\", \"margin\", \"marginHorizontal\", \"marginVertical\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\", \"padding\", \"paddingHorizontal\", \"paddingVertical\", \"paddingTop\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\"]);\n\n  var _mergeTheme = mergeTheme(_objectSpread({}, expoTheme), theme),\n      SIZES = _mergeTheme.SIZES,\n      COLORS = _mergeTheme.COLORS,\n      FONTS = _mergeTheme.FONTS,\n      WEIGHTS = _mergeTheme.WEIGHTS;\n\n  var marginSpacing = getMargins({\n    margin: margin,\n    marginHorizontal: marginHorizontal,\n    marginVertical: marginVertical,\n    marginTop: marginTop,\n    marginBottom: marginBottom,\n    marginLeft: marginLeft,\n    marginRight: marginRight,\n    defaultValue: SIZES.base\n  });\n  var paddingSpacing = getPaddings({\n    padding: padding,\n    paddingHorizontal: paddingHorizontal,\n    paddingVertical: paddingVertical,\n    paddingTop: paddingTop,\n    paddingBottom: paddingBottom,\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight,\n    defaultValue: SIZES.base\n  });\n  var textStyles = StyleSheet.flatten([{\n    fontWeight: WEIGHTS.regular,\n    fontSize: SIZES.font,\n    color: COLORS.font\n  }, h1 && FONTS.h1, h2 && FONTS.h2, h3 && FONTS.h3, title && FONTS.title, subtitle && FONTS.subtitle, caption && FONTS.caption, small && FONTS.small, size && {\n    fontSize: size\n  }, marginSpacing, paddingSpacing, transform && {\n    textTransform: transform\n  }, height && {\n    lineHeight: height\n  }, spacing && {\n    letterSpacing: spacing\n  }, weight && {\n    fontWeight: weight\n  }, regular && {\n    fontWeight: WEIGHTS.regular\n  }, bold && {\n    fontWeight: WEIGHTS.bold\n  }, semibold && {\n    fontWeight: WEIGHTS.semibold\n  }, medium && {\n    fontWeight: WEIGHTS.medium\n  }, light && {\n    fontWeight: WEIGHTS.light\n  }, center && styles.center, right && styles.right, primary && {\n    color: COLORS.primary\n  }, secondary && {\n    color: COLORS.secondary\n  }, tertiary && {\n    color: COLORS.tertiary\n  }, black && {\n    color: COLORS.black\n  }, white && {\n    color: COLORS.white\n  }, gray && {\n    color: COLORS.gray\n  }, error && {\n    color: COLORS.error\n  }, warning && {\n    color: COLORS.warning\n  }, success && {\n    color: COLORS.success\n  }, info && {\n    color: COLORS.info\n  }, color && {\n    color: color\n  }, style]);\n\n  if (animated) {\n    return React.createElement(Animated.Text, _extends({}, rest, {\n      style: textStyles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return React.createElement(Text, _extends({}, rest, {\n    style: textStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nTypography.defaultProps = {\n  h1: false,\n  h2: false,\n  h3: false,\n  title: false,\n  subtitle: false,\n  caption: false,\n  small: false,\n  size: null,\n  margin: null,\n  padding: null,\n  transform: null,\n  regular: false,\n  bold: false,\n  semibold: false,\n  medium: false,\n  weight: false,\n  light: false,\n  center: false,\n  right: false,\n  spacing: null,\n  height: null,\n  color: null,\n  primary: false,\n  secondary: false,\n  tertiary: false,\n  black: false,\n  white: false,\n  gray: false,\n  error: false,\n  warning: false,\n  success: false,\n  info: false,\n  theme: {},\n  style: {}\n};\nexport default Typography;\nvar styles = StyleSheet.create({\n  center: {\n    textAlign: \"center\"\n  },\n  right: {\n    textAlign: \"right\"\n  }\n});","map":{"version":3,"sources":["C:/Projects/m_physics/front-end/node_modules/expo-ui-kit/src/Text.js"],"names":["React","expoTheme","mergeTheme","getMargins","getPaddings","Typography","props","h1","h2","h3","title","subtitle","caption","small","size","transform","regular","bold","semibold","medium","weight","light","center","right","spacing","height","color","primary","secondary","tertiary","black","white","gray","error","warning","success","info","animated","theme","style","children","margin","marginHorizontal","marginVertical","marginTop","marginBottom","marginLeft","marginRight","padding","paddingHorizontal","paddingVertical","paddingTop","paddingBottom","paddingLeft","paddingRight","rest","SIZES","COLORS","FONTS","WEIGHTS","marginSpacing","defaultValue","base","paddingSpacing","textStyles","StyleSheet","flatten","fontWeight","fontSize","font","textTransform","lineHeight","letterSpacing","styles","defaultProps","create","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Animated, StyleSheet, Text } from \"react-native\";\n\nimport expoTheme from \"./theme\";\nimport { mergeTheme, getMargins, getPaddings } from \"./utils/index\";\n\n/**\n * Usage:\n * fontSize predefined by theme.js\n * - <Text h1>fontSize of 34 from FONTS.h1</Text>\n * - <Text h2>fontSize of 24 from FONTS.h2</Text>\n * - <Text h3>fontSize of 20 from FONTS.h3</Text>\n * - <Text title>fontSize of 18 from FONTS.title</Text>\n * - <Text subtitle>fontSize of 14 from FONTS.subtitle</Text>\n * - <Text caption>fontSize of 12 from FONTS.caption</Text>\n * - <Text small>fontSize of 10 from FONTS.small</Text>\n * fontSize defined by user\n * - <Text size={20}>fontSize of 20</Text>\n *\n * margin & padding\n * - <Text margin={4}>set margin 4 to: top, right, bottom & left</Text>\n * - <Text padding={6}>set margin 6 to: top, right, bottom & left</Text>\n * - margin + Top | Bottom | Left | Right | Vertical | Horizontal\n * - padding + Top | Bottom | Left | Right | Vertical | Horizontal\n *\n * text styling\n * - <Text transform>textTransform: capitalize, lowercase, uppercase</Text>\n * - <Text regular>fontWeight from WEIGHTS.regular</Text>\n * - <Text bold>fontWeight from WEIGHTS.bold</Text>\n * - <Text semibold>fontWeight from WEIGHTS.semibold</Text>\n * - <Text medium>fontWeight from WEIGHTS.medium</Text>\n * - <Text light>fontWeight from WEIGHTS.light</Text>\n * - <Text weight=\"700\">fontWeight from user input</Text>\n *\n * text colors\n * - <Text primary>color from COLORS.primary</Text>\n * - <Text secondary>color from COLORS.secondary</Text>\n * - <Text tertiary>color from COLORS.tertiary</Text>\n * - <Text black>color from COLORS.black</Text>\n * - <Text white>color from COLORS.white</Text>\n * - <Text gray>color from COLORS.gray</Text>\n * - <Text info>color from COLORS.info</Text>\n * - <Text success>color from COLORS.success</Text>\n * - <Text warning>color from COLORS.warning</Text>\n * - <Text error>color from COLORS.error</Text>\n * - <Text color=\"#DDD\">color from user input</Text>\n *\n * custom theme using the src/theme.js data structure\n * - create a custom theme by defining: const customTheme.js\n * - with the following structure to rewrite any value\n * {\n *   COLORS: {\n *     primary: \"cyan\" or \"#8A00D4\",\n *     secondary: \"fucsia\" or \"#D527B7\",\n *     tertiary: \"yellow\" or \"#FFC46B\"\n *   },\n *   SIZES: {\n *     font: 15,\n *     h1: 28\n *     title: 17\n *   }\n * }\n * - include the custom theme to the component props\n * <Text primary theme={customTheme}>primary using new color: #8A00D4</Text>\n *\n * animating text can be used using the \"animated\" props\n * - <Text animated>will render Animated.Text</Text>\n */\n\nconst Typography = (props) => {\n  const {\n    // fonts & sizes\n    h1,\n    h2,\n    h3,\n    title,\n    subtitle,\n    caption,\n    small,\n    size,\n    // styling\n    transform,\n    regular,\n    bold,\n    semibold,\n    medium,\n    weight,\n    light,\n    center,\n    right,\n    spacing, // letter-spacing\n    height, // line-height\n    // colors\n    color,\n    primary,\n    secondary,\n    tertiary,\n    black,\n    white,\n    gray,\n    error,\n    warning,\n    success,\n    info,\n    animated,\n    theme,\n    style,\n    children,\n    // sizing props\n    margin,\n    marginHorizontal,\n    marginVertical,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    padding,\n    paddingHorizontal,\n    paddingVertical,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    ...rest\n  } = props;\n\n  const { SIZES, COLORS, FONTS, WEIGHTS } = mergeTheme({ ...expoTheme }, theme);\n\n  const marginSpacing = getMargins({\n    margin,\n    marginHorizontal,\n    marginVertical,\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    defaultValue: SIZES.base\n  });\n  const paddingSpacing = getPaddings({\n    padding,\n    paddingHorizontal,\n    paddingVertical,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight,\n    defaultValue: SIZES.base\n  });\n\n  const textStyles = StyleSheet.flatten([\n    {\n      fontWeight: WEIGHTS.regular,\n      fontSize: SIZES.font,\n      color: COLORS.font\n    },\n    h1 && FONTS.h1,\n    h2 && FONTS.h2,\n    h3 && FONTS.h3,\n    title && FONTS.title,\n    subtitle && FONTS.subtitle,\n    caption && FONTS.caption,\n    small && FONTS.small,\n    size && { fontSize: size },\n    marginSpacing,\n    paddingSpacing,\n    transform && { textTransform: transform },\n    height && { lineHeight: height },\n    spacing && { letterSpacing: spacing },\n    weight && { fontWeight: weight },\n    regular && { fontWeight: WEIGHTS.regular },\n    bold && { fontWeight: WEIGHTS.bold },\n    semibold && { fontWeight: WEIGHTS.semibold },\n    medium && { fontWeight: WEIGHTS.medium },\n    light && { fontWeight: WEIGHTS.light },\n    center && styles.center,\n    right && styles.right,\n    // color shortcuts\n    primary && { color: COLORS.primary },\n    secondary && { color: COLORS.secondary },\n    tertiary && { color: COLORS.tertiary },\n    black && { color: COLORS.black },\n    white && { color: COLORS.white },\n    gray && { color: COLORS.gray },\n    error && { color: COLORS.error },\n    warning && { color: COLORS.warning },\n    success && { color: COLORS.success },\n    info && { color: COLORS.info },\n    color && { color },\n    style // rewrite predefined styles\n  ]);\n\n  if (animated) {\n    return (\n      <Animated.Text {...rest} style={textStyles}>\n        {children}\n      </Animated.Text>\n    );\n  }\n\n  return (\n    <Text {...rest} style={textStyles}>\n      {children}\n    </Text>\n  );\n};\n\nTypography.defaultProps = {\n  // fonts & sizes\n  h1: false,\n  h2: false,\n  h3: false,\n  title: false,\n  subtitle: false,\n  caption: false,\n  small: false,\n  size: null,\n  margin: null,\n  padding: null,\n  // styling\n  transform: null,\n  regular: false,\n  bold: false,\n  semibold: false,\n  medium: false,\n  weight: false,\n  light: false,\n  center: false,\n  right: false,\n  spacing: null, // letter-spacing\n  height: null, // line-height\n  // colors\n  color: null,\n  primary: false,\n  secondary: false,\n  tertiary: false,\n  black: false,\n  white: false,\n  gray: false,\n  error: false,\n  warning: false,\n  success: false,\n  info: false,\n  theme: {},\n  style: {}\n};\n\nexport default Typography;\n\nconst styles = StyleSheet.create({\n  // positioning\n  center: { textAlign: \"center\" },\n  right: { textAlign: \"right\" }\n});\n"]},"metadata":{},"sourceType":"module"}