{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var getSpacings = function getSpacings(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (typeof value === \"boolean\") return defaultValue;\n  if (typeof value === \"number\") return value;\n\n  if (typeof value === \"string\") {\n    var valueMatch = value.match(/((?=.*[1-9])\\d*(?:\\.\\d{1,2})|(\\d*))x/)[0];\n    if (!valueMatch) return defaultValue;\n    return parseFloat(valueMatch) * (defaultValue > 0 ? defaultValue : 1);\n  }\n\n  if (typeof value === \"object\") {\n    var size = Object.keys(value).length;\n    var top = 0;\n    var bottom = size === 1 || size === 2 ? 0 : 2;\n    var right = size === 1 ? 0 : 1;\n    var left = size === 1 ? 0 : size === 2 ? 1 : 3;\n    return {\n      top: value[top] || defaultValue,\n      right: value[right] || defaultValue,\n      bottom: value[bottom] || defaultValue,\n      left: value[left] || defaultValue\n    };\n  }\n};\nexport var getMargins = function getMargins(_ref) {\n  var margin = _ref.margin,\n      marginTop = _ref.marginTop,\n      marginBottom = _ref.marginBottom,\n      marginRight = _ref.marginRight,\n      marginLeft = _ref.marginLeft,\n      marginVertical = _ref.marginVertical,\n      marginHorizontal = _ref.marginHorizontal,\n      defaultValue = _ref.defaultValue;\n  var styles = {};\n\n  if (margin) {\n    var values = getSpacings(margin, defaultValue);\n    var isArray = typeof margin === \"object\";\n    styles.marginTop = isArray ? values.top : values;\n    styles.marginRight = isArray ? values.right : values;\n    styles.marginBottom = isArray ? values.bottom : values;\n    styles.marginLeft = isArray ? values.left : values;\n  }\n\n  if (marginTop && typeof marginTop !== \"object\") {\n    styles.marginTop = getSpacings(marginTop, defaultValue);\n  }\n\n  if (marginBottom && typeof marginBottom !== \"object\") {\n    styles.marginBottom = getSpacings(marginBottom, defaultValue);\n  }\n\n  if (marginLeft && typeof marginLeft !== \"object\") {\n    styles.marginLeft = getSpacings(marginLeft, defaultValue);\n  }\n\n  if (marginRight && typeof marginRight !== \"object\") {\n    styles.marginRight = getSpacings(marginRight, defaultValue);\n  }\n\n  if (marginVertical && typeof marginVertical !== \"object\") {\n    styles.marginTop = getSpacings(marginVertical, defaultValue);\n    styles.marginBottom = getSpacings(marginVertical, defaultValue);\n  }\n\n  if (marginHorizontal && typeof marginHorizontal !== \"object\") {\n    styles.marginRight = getSpacings(marginHorizontal, defaultValue);\n    styles.marginLeft = getSpacings(marginHorizontal, defaultValue);\n  }\n\n  return styles;\n};\nexport var getPaddings = function getPaddings(_ref2) {\n  var padding = _ref2.padding,\n      paddingTop = _ref2.paddingTop,\n      paddingBottom = _ref2.paddingBottom,\n      paddingRight = _ref2.paddingRight,\n      paddingLeft = _ref2.paddingLeft,\n      paddingVertical = _ref2.paddingVertical,\n      paddingHorizontal = _ref2.paddingHorizontal,\n      defaultValue = _ref2.defaultValue;\n  var styles = {};\n\n  if (padding) {\n    var values = getSpacings(padding, defaultValue);\n    var isArray = typeof padding === \"object\";\n    styles.paddingTop = isArray ? values.top : values;\n    styles.paddingRight = isArray ? values.right : values;\n    styles.paddingBottom = isArray ? values.bottom : values;\n    styles.paddingLeft = isArray ? values.left : values;\n  }\n\n  if (paddingTop && typeof paddingTop !== \"object\") {\n    styles.paddingTop = getSpacings(paddingTop, defaultValue);\n  }\n\n  if (paddingBottom && typeof paddingBottom !== \"object\") {\n    styles.paddingBottom = getSpacings(paddingBottom, defaultValue);\n  }\n\n  if (paddingLeft && typeof paddingLeft !== \"object\") {\n    styles.paddingLeft = getSpacings(paddingLeft, defaultValue);\n  }\n\n  if (paddingRight && typeof paddingRight !== \"object\") {\n    styles.paddingRight = getSpacings(paddingRight, defaultValue);\n  }\n\n  if (paddingVertical && typeof paddingVertical !== \"object\") {\n    styles.paddingTop = getSpacings(paddingVertical, defaultValue);\n    styles.paddingBottom = getSpacings(paddingVertical, defaultValue);\n  }\n\n  if (paddingHorizontal && typeof paddingHorizontal !== \"object\") {\n    styles.paddingRight = getSpacings(paddingHorizontal, defaultValue);\n    styles.paddingLeft = getSpacings(paddingHorizontal, defaultValue);\n  }\n\n  return styles;\n};\nexport var mergeTheme = function mergeTheme(theme, extra) {\n  var COLORS = extra.COLORS,\n      SIZES = extra.SIZES,\n      FONTS = extra.FONTS,\n      WEIGHTS = extra.WEIGHTS,\n      REST = _objectWithoutProperties(extra, [\"COLORS\", \"SIZES\", \"FONTS\", \"WEIGHTS\"]);\n\n  return _objectSpread({\n    COLORS: _objectSpread(_objectSpread({}, theme == null ? void 0 : theme.COLORS), COLORS),\n    SIZES: _objectSpread(_objectSpread({}, theme == null ? void 0 : theme.SIZES), SIZES),\n    FONTS: _objectSpread(_objectSpread({}, theme == null ? void 0 : theme.FONTS), FONTS),\n    WEIGHTS: _objectSpread(_objectSpread({}, theme == null ? void 0 : theme.WEIGHTS), WEIGHTS)\n  }, REST);\n};","map":{"version":3,"sources":["C:/Projects/m_physics/front-end/node_modules/expo-ui-kit/src/utils/helpers.js"],"names":["getSpacings","value","defaultValue","valueMatch","match","parseFloat","size","Object","keys","length","top","bottom","right","left","getMargins","margin","marginTop","marginBottom","marginRight","marginLeft","marginVertical","marginHorizontal","styles","values","isArray","getPaddings","padding","paddingTop","paddingBottom","paddingRight","paddingLeft","paddingVertical","paddingHorizontal","mergeTheme","theme","extra","COLORS","SIZES","FONTS","WEIGHTS","REST"],"mappings":"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","sourcesContent":["/**\n * Generate stylesheets for margin or padding\n * type: string - margin or padding\n * value: boolean (true), number, array or string (\"2x\", \"0.5x\")\n * defaultValue: integer\n *\n * Usage:\n * const marginSpacing = spacing(\"margin\", true);\n * const paddingSpacing = spacing(\"padding\", true, 10);\n * const marginSpacing = spacing(\"margin\", 6);\n * const marginSpacing = spacing(\"margin\", [4]); // vertical & horizontal => 4\n * const marginSpacing = spacing(\"margin\", [4, 8]); // vertical => 4, horizontal => 8\n * const marginSpacing = spacing(\"margin\", [4, 8, 2]); // top => 4, right & left => 8, bottom => 2\n * const marginSpacing = spacing(\"margin\", [4, 8, 2, 6]); // top => 4, right => 8, bottom => 2, left => 6\n * const marginSpacing = spacing(\"margin\", \"2x\", 10); // multiply 2 * 10 => margin 20\n * const marginSpacing = spacing(\"margin\", \"0.5x\", 12); // multiply 0.5 * 10 => margin 6\n */\n\nexport const getSpacings = (value, defaultValue = 0) => {\n  // if the value is boolean return defaultValue\n  if (typeof value === \"boolean\") return defaultValue;\n\n  // if the value is integer/number\n  if (typeof value === \"number\") return value;\n\n  // if the value is a string: 2x 4x 1.5x\n  if (typeof value === \"string\") {\n    // extract decimal or integer value from value\n    const valueMatch = value.match(/((?=.*[1-9])\\d*(?:\\.\\d{1,2})|(\\d*))x/)[0];\n\n    if (!valueMatch) return defaultValue;\n    return parseFloat(valueMatch) * (defaultValue > 0 ? defaultValue : 1);\n  }\n\n  // parse array of values [1, 2, 3, 4]\n  if (typeof value === \"object\") {\n    const size = Object.keys(value).length;\n\n    // get value based on array index\n    // vertical\n    const top = 0;\n    const bottom = size === 1 || size === 2 ? 0 : 2;\n\n    // horizontal\n    const right = size === 1 ? 0 : 1;\n    const left = size === 1 ? 0 : size === 2 ? 1 : 3;\n\n    return {\n      top: value[top] || defaultValue,\n      right: value[right] || defaultValue,\n      bottom: value[bottom] || defaultValue,\n      left: value[left] || defaultValue\n    };\n  }\n};\n\nexport const getMargins = ({\n  margin,\n  marginTop,\n  marginBottom,\n  marginRight,\n  marginLeft,\n  marginVertical,\n  marginHorizontal,\n  defaultValue\n}) => {\n  const styles = {};\n\n  if (margin) {\n    const values = getSpacings(margin, defaultValue);\n    const isArray = typeof margin === \"object\";\n\n    styles.marginTop = isArray ? values.top : values;\n    styles.marginRight = isArray ? values.right : values;\n    styles.marginBottom = isArray ? values.bottom : values;\n    styles.marginLeft = isArray ? values.left : values;\n  }\n\n  if (marginTop && typeof marginTop !== \"object\") {\n    styles.marginTop = getSpacings(marginTop, defaultValue);\n  }\n\n  if (marginBottom && typeof marginBottom !== \"object\") {\n    styles.marginBottom = getSpacings(marginBottom, defaultValue);\n  }\n\n  if (marginLeft && typeof marginLeft !== \"object\") {\n    styles.marginLeft = getSpacings(marginLeft, defaultValue);\n  }\n\n  if (marginRight && typeof marginRight !== \"object\") {\n    styles.marginRight = getSpacings(marginRight, defaultValue);\n  }\n\n  if (marginVertical && typeof marginVertical !== \"object\") {\n    styles.marginTop = getSpacings(marginVertical, defaultValue);\n    styles.marginBottom = getSpacings(marginVertical, defaultValue);\n  }\n\n  if (marginHorizontal && typeof marginHorizontal !== \"object\") {\n    styles.marginRight = getSpacings(marginHorizontal, defaultValue);\n    styles.marginLeft = getSpacings(marginHorizontal, defaultValue);\n  }\n\n  return styles;\n};\n\nexport const getPaddings = ({\n  padding,\n  paddingTop,\n  paddingBottom,\n  paddingRight,\n  paddingLeft,\n  paddingVertical,\n  paddingHorizontal,\n  defaultValue\n}) => {\n  const styles = {};\n\n  if (padding) {\n    const values = getSpacings(padding, defaultValue);\n    const isArray = typeof padding === \"object\";\n\n    styles.paddingTop = isArray ? values.top : values;\n    styles.paddingRight = isArray ? values.right : values;\n    styles.paddingBottom = isArray ? values.bottom : values;\n    styles.paddingLeft = isArray ? values.left : values;\n  }\n\n  if (paddingTop && typeof paddingTop !== \"object\") {\n    styles.paddingTop = getSpacings(paddingTop, defaultValue);\n  }\n\n  if (paddingBottom && typeof paddingBottom !== \"object\") {\n    styles.paddingBottom = getSpacings(paddingBottom, defaultValue);\n  }\n\n  if (paddingLeft && typeof paddingLeft !== \"object\") {\n    styles.paddingLeft = getSpacings(paddingLeft, defaultValue);\n  }\n\n  if (paddingRight && typeof paddingRight !== \"object\") {\n    styles.paddingRight = getSpacings(paddingRight, defaultValue);\n  }\n\n  if (paddingVertical && typeof paddingVertical !== \"object\") {\n    styles.paddingTop = getSpacings(paddingVertical, defaultValue);\n    styles.paddingBottom = getSpacings(paddingVertical, defaultValue);\n  }\n\n  if (paddingHorizontal && typeof paddingHorizontal !== \"object\") {\n    styles.paddingRight = getSpacings(paddingHorizontal, defaultValue);\n    styles.paddingLeft = getSpacings(paddingHorizontal, defaultValue);\n  }\n\n  return styles;\n};\n\n/**\n * Merge 2 theme with a default theme and extra theme\n * to rewrite the default values with new values\n * using ES6 spread operator\n * Theme accepted data structure format:\n * const theme1 = {\n *   COLORS: {\n *     primary: \"red\",\n *     secondary: \"green\",\n *     // see theme.js\n *   },\n *   SIZES: {\n *     // see theme.js\n *   },\n *   FONTS: {\n *     // see theme.js\n *   },\n *   WEIGHTS: {\n *     // see theme.js\n *   }\n * }\n *\n * const theme2 = {\n *   COLORS: {\n *     primary: \"blue\",\n *   }\n * }\n *\n * Usage\n * const appTheme = mergeTheme(theme1, theme2);\n * const { COLORS } = appTheme;\n * COLORS.primary will return value \"blue\"\n * COLORS.secondary will return value \"green\"\n */\n\nexport const mergeTheme = (theme, extra) => {\n  const { COLORS, SIZES, FONTS, WEIGHTS, ...REST } = extra;\n  return {\n    COLORS: { ...theme?.COLORS, ...COLORS },\n    SIZES: { ...theme?.SIZES, ...SIZES },\n    FONTS: { ...theme?.FONTS, ...FONTS },\n    WEIGHTS: { ...theme?.WEIGHTS, ...WEIGHTS },\n    ...REST\n  };\n};\n"]},"metadata":{},"sourceType":"module"}